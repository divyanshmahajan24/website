<!DOCTYPE html>
<html>

<head>
	{{> head}}
	<title>Divyansh Mahajan</title>
</head>

<body>
	<div>
		{{> header}}
		<div id="home">
			<div id="main" class="border-bottom">
				<img src="/images/developer.png" alt="Developer">
				<section class="main container" id="intro">
					<div class="row no-gutters" style="height: 100%">
						<div class="col-xl-12 name-section">
							<h1 class="page-header" id="name">Divyansh Mahajan</h1>
							<ul class="nav flex-column">
								<li class="name-border"></li>
								<li class="name-border"></li>
							</ul>
						</div>
						<div class="col-xl-12">
							<div class="row justify-content-start">
								<div class="col-xl-5">
									<div id="about-me-description">
										<p class="page-sub-header">I'm a full-stack software developer based in Delhi, India.</p>
										<p class="intro"> I enjoy turning complex problems into simple, beautiful and intuitive designs. I focus on writing
											clean, elegant and efficient code. When I'm not coding, tweeting or pushing pixels, you'll find me reading or
											travelling.
										</p>
									</div>
								</div>
							</div>
						</div>
					</div>
				</section>
			</div>
			<div id="random-facts" class="section-box-shadow">
				<section class="container facts-section">
					<div class="row">
						<div class="col-xl-7">
							<div class="facts-images">
								<img class="laptop" src="/images/macbook.png" alt="macbook">
								<img class="facts" src="/images/facts.png" alt="macbook">
							</div>
						</div>
						<div class="col-xl-5" id="facts-text">
							<p class="page-sub-header">Random facts</p>
							<ul id="facts" class="nav flex-column">
								<li class="nav-item">
									I love to code.
								</li>
								<li class="nav-item">
									I like talking about performance for web and mobile.
								</li>
								<li class="nav-item">
									I like to read about technology.
								</li>
								<li class="nav-item">
									I sometimes cook.
								</li>
								<li class="nav-item">
									My new found love is Twitter.
								</li>
								<li class="nav-item">
									I have started with some blogging.
								</li>
							</ul>
						</div>
					</div>
				</section>
			</div>
			<div class="section-box-shadow" id="editor-section">
				<section class="main container">
					<div class="row">
						<div class="col-xl-12">
							<p class="page-sub-header">Some cool stuff, because why not?</p>
							<div id="editor">
								<div class="editor-head">
									<ul class="nav">
										<li class="nav-items red"></li>
										<li class="nav-items yellow"></li>
										<li class="nav-items green"></li>
									</ul>
								</div>
								<div class="editor-content">
									<div id="import-frontend"></div>
									<div id="import-backend"></div>
									<div id="intro-class"></div>
									<div id="intro-render"></div>
									<div id="intro-return"></div>
									<div id="intro-render-end"></div>
									<div id="intro-class-end"></div>
									<div id="export"></div>
								</div>
							</div>
						</div>
					</div>
				</section>
			</div>
		</div>
	</div>
	{{> footer}} {{> foot}}

	<script type="text/javascript">
		let typing = false;
		let factsAnimation = false;

		// Checks if the element is in viewport
		const isInViewport = function (elem) {
			const bounding = elem.getBoundingClientRect();
			return (
				bounding.top >= 0 &&
				bounding.left >= 0 &&
				bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
				bounding.right <= (window.innerWidth || document.documentElement.clientWidth)
			);
		};

		// Handle typing effect
		const handleTypeEffect = () => {
			/*
			 * Type effect in editor
			*/
			let index = 0;
			const speed = 50;

			// Type function
			const type = (text, id, index) => {
				if (index <= text.length) {
					if (index === text.length) {
						index = 0;
						return;
					}
					document.getElementById(id).innerHTML += text.charAt(index);
					index++;
					setTimeout(() => { type(text, id, index) }, speed);
				}
			}

			type("import * from 'frontend';", "import-frontend", index);
			setTimeout(() => { type("import * from 'backend';", "import-backend", index); }, 1300);
			setTimeout(() => { type("class Divyansh extends Fullstack.Developer {", "intro-class", index); }, 2600);
			setTimeout(() => { type("render( ) {", "intro-render", index); }, 5000);
			setTimeout(() => { type("return 'Awesome applications!'", "intro-return", index); }, 6000);
			setTimeout(() => { type("}", "intro-render-end", index); }, 7800);
			setTimeout(() => { type("}", "intro-class-end", index); }, 8500);
			setTimeout(() => { type("export default Divyansh;", "export", index); }, 9000);
			/*
			 * Type effect in editor end
			*/
		}

		const HandleFactsAnimation = () => {
			if(factsAnimation) {
				return;
			}

			const laptop = $('.laptop');
			const facts = $('.facts');
			const factsText = $('#facts-text');

			laptop.addClass('slide-laptop');
			facts.addClass('slide-facts-image');
			factsText.addClass('fade-facts-text');
			factsAnimation = true;
		}

		// On scroll check if editor is in viewport
		$(window).scroll(() => {
			const element = document.querySelector('#editor');

			if (typing && isInViewport(element)) {
				return;
			}

			if (isInViewport(element)) {
				typing = true;
				handleTypeEffect();
			}

			if($(window).scrollTop() > 300) {
				HandleFactsAnimation();
			}
		});
	</script>
</body>

</html>